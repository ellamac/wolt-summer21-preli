{"version":3,"sources":["components/Card.js","components/Carousel.js","App.js","index.js"],"names":["Card","restaurant","className","online","hash","blurhash","width","height","punch","name","Carousel","restaurants","title","dots","infinite","speed","slidesToShow","slidesToScroll","initialSlide","centerMode","responsive","breakpoint","settings","map","r","App","props","useState","discoveryPageData","setDiscoveryPageData","useEffect","fetch","headers","Accept","then","response","console","log","json","myJson","sections","length","item","ReactDOM","render","document","getElementById"],"mappings":"4NA8BeA,EA3BF,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACd,OAEE,cADA,CACA,OAAKC,UAAS,eAAUD,EAAWE,OAAS,SAAW,WAAvD,UAEE,cAAC,IAAD,CACED,UAAU,aACVE,KAAMH,EAAWI,SACjBC,MAAO,IACPC,OAAQ,IACRC,MAAO,IAGT,sBAAKN,UAAU,eAAf,UAEGD,EAAWE,OACV,mBAAGD,UAAU,gBAAb,oBAEA,mBAAGA,UAAU,iBAAb,qBAGF,mBAAGA,UAAU,OAAb,SAAqBD,EAAWQ,cC+BzBC,EAnDE,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,YAAaC,EAAY,EAAZA,MAuC/B,OACE,sBAAKV,UAAU,qBAAf,UACE,oBAAIA,UAAU,QAAd,SAAuBU,IACvB,cAAC,IAAD,2BAxCa,CACfC,MAAM,EACNC,UAAU,EACVC,MAAO,IACPC,aAAc,EACdC,eAAgB,EAChBC,aAAc,EACdC,YAAY,EAEZC,WAAY,CACV,CACEC,WAAY,KACZC,SAAU,CACRN,aAAc,EACdC,eAAgB,EAChBH,UAAU,EACVD,MAAM,IAGV,CACEQ,WAAY,IACZC,SAAU,CACRN,aAAc,EACdC,eAAgB,EAChBC,aAAc,IAGlB,CACEG,WAAY,IACZC,SAAU,CACRN,aAAc,EACdC,eAAgB,OASpB,aAGGN,GAAeA,EAAYY,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAmBvB,WAAYuB,GAApBA,EAAEf,gBCN3CgB,EAxCH,SAAAC,GAAU,IAAD,EAC+BC,mBAAS,IADxC,mBACZC,EADY,KACOC,EADP,KA0BnB,OAJAC,qBAAU,WAjBRC,MAAM,sBAAuB,CAC3BC,QAAS,CACP,eAAgB,mBAChBC,OAAQ,sBAGTC,MAAK,SAAUC,GAEd,OADAC,QAAQC,IAAIF,GACLA,EAASG,UAEjBJ,MAAK,SAAUK,GACdH,QAAQC,IAAIE,GACZV,EAAqBU,EAAOC,eAO/B,IAGD,qBAAKtC,UAAU,MAAf,SAIG0B,GACCA,EAAkBa,OAAS,GAC3Bb,EAAkBL,KAAI,SAAAmB,GAAI,OACxB,cAAC,EAAD,CAA2B/B,YAAa+B,EAAK/B,YAAaC,MAAO8B,EAAK9B,OAAvD8B,EAAK9B,a,kBC9B9B+B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.03d05bf7.chunk.js","sourcesContent":["import React from 'react';\nimport { Blurhash } from 'react-blurhash';\n\nconst Card = ({ restaurant }) => {\n  return (\n    /* adds different class depenging on online status */\n    <div className={`card ${restaurant.online ? 'online' : 'offline'}`}>\n      {/* card background canvas */}\n      <Blurhash\n        className=\"card-image\"\n        hash={restaurant.blurhash}\n        width={480}\n        height={720}\n        punch={1}\n      />\n      {/* card text content */}\n      <div className=\"card-content\">\n        {/* correct element content and classes depensing on online status */}\n        {restaurant.online ? (\n          <p className=\"status online\">online</p>\n        ) : (\n          <p className=\"status offline\">offline</p>\n        )}\n\n        <p className=\"name\">{restaurant.name}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\nimport Slider from 'react-slick';\nimport Card from './Card';\n\nconst Carousel = ({ restaurants, title }) => {\n  /* Settings for react-slick Slider-component */\n  const settings = {\n    dots: true,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 4, //Shows max 4 slides at the same time\n    slidesToScroll: 1, //Each scroll or arrow click reveals one new slide, aka. the carousel moves one step\n    initialSlide: 0,\n    centerMode: false,\n    /* different amounts of slides according to screen size */\n    responsive: [\n      {\n        breakpoint: 1024,\n        settings: {\n          slidesToShow: 3,\n          slidesToScroll: 1,\n          infinite: true,\n          dots: true\n        }\n      },\n      {\n        breakpoint: 600,\n        settings: {\n          slidesToShow: 2,\n          slidesToScroll: 1,\n          initialSlide: 2\n        }\n      },\n      {\n        breakpoint: 480,\n        settings: {\n          slidesToShow: 1,\n          slidesToScroll: 1\n        }\n      }\n    ]\n  };\n\n  return (\n    <div className=\"carousel-container\">\n      <h2 className=\"title\">{title}</h2>\n      <Slider {...settings}>\n        {/* Checking that 'restaurants' has data */}\n        {/* mapping restaurants' into cards */}\n        {restaurants && restaurants.map(r => <Card key={r.name} restaurant={r} />)}\n      </Slider>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React, { useState, useEffect } from 'react';\nimport Carousel from './components/Carousel.js';\n\nconst App = props => {\n  const [discoveryPageData, setDiscoveryPageData] = useState([]);\n\n  /* get data from ../public/discovery_page.json */\n  const getData = () => {\n    fetch('discovery_page.json', {\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json'\n      }\n    })\n      .then(function (response) {\n        console.log(response);\n        return response.json();\n      })\n      .then(function (myJson) {\n        console.log(myJson);\n        setDiscoveryPageData(myJson.sections);\n      });\n  };\n\n  /* after render, getData */\n  useEffect(() => {\n    getData();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {/* checking that state is not empty */}\n      {/* mapping discovery page's data into carousels */}\n\n      {discoveryPageData &&\n        discoveryPageData.length > 0 &&\n        discoveryPageData.map(item => (\n          <Carousel key={item.title} restaurants={item.restaurants} title={item.title} />\n        ))}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport styles from './styles.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}